{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["apiKey","resp","actor1","actor2","title1","title2","Loader","className","handleChange","input","current","value","length","nextElementSibling","clearInput","ref","num","focus","fetchData","base","name","urlStr","requestOptions","method","redirect","fetch","then","response","text","result","JSON","parse","catch","error","console","log","data","Title","props","movie","getType","title","href","id","year","FormatRoles","roles","match","role","split","replace","err","formatRole","roleArray","MatchingItemsTitles","title1ids","actors","map","d","title2ids","intersection","filter","element","includes","mapped","actor","find","actorB","asCharacter","TitleForm","useState","found1","setFound1","found2","setFound2","useRef","new","newItem","setNewItem","event","preventDefault","results","onSubmit","onChange","type","placeholder","onClick","MatchingItems","a1Roles","castMovies","a2Roles","a1ids","a2ids","a1matches","a2matches","items","description","getMostSimilarId","actorName","array","forEach","item","nameValue","returnedName","similarity","toLowerCase","stringSimilarity","compareTwoStrings","sort","a","b","ActorForm","actor2ID","elements","Nav","state","activeElement","allElements","this","showIndex","toggleIndex","index","setState","Component","NavItem","isActive","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63f47f15.chunk.js","sourcesContent":["import React, { useState, useRef, Component } from 'react';\nimport './App.scss';\nimport stringSimilarity from 'string-similarity';\n\nconst apiKey = 'k_l56508qd';\nlet resp = {\n  actor1: [],\n  actor2: [],\n  title1: [],\n  title2: []\n};\n\nconst Loader = () => {\n  return(\n    <div className=\"loader\">\n      <span>loading</span>\n      <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n    </div>\n  )\n}\n\nconst handleChange = (input) => {\n  if(input.current.value.length > 0){\n    input.current.nextElementSibling.className = 'del show-ex'\n  } else {\n    input.current.nextElementSibling.className = 'del'\n  }\n}\n\nconst clearInput = (ref, num) => {\n  ref.current.value = '';\n  ref.current.focus();\n  handleChange(ref)\n}\n\nasync function fetchData(base, name){\n  const urlStr = `${base}/${apiKey}/${name}`;\n  const requestOptions = {\n    method: 'GET',\n    redirect: 'follow'\n  };\n   \n  const data = await fetch(urlStr, requestOptions)\n    .then(response => response.text())\n    .then(result => {\n      return JSON.parse(result);\n    })\n    .catch(error => console.log('error', error));\n\n  return data;\n}\n\nconst Title = (props) => {\n  const movie = props.movie;\n  if(getType(movie.title) === 'movie'){\n    return(\n      <h2><a href={`https://www.imdb.com/title/${movie.id}`}>{movie.title} ({movie.year})</a></h2>\n    )\n  } else {\n    return(\n      <h2><a href={`https://www.imdb.com/title/${movie.id}`}>{movie.title}</a></h2>\n    )\n  }\n}\n\nconst FormatRoles = (props) => {\n  if(props.roles.match(/\\(TV /g) || props.roles.match(/\\(Video\\)/g)){\n    let role = props.roles.split(' - ')[0].split(') ')[1];\n    try{\n      role = role.replace('(Video) ', '');\n      role = role.replace('...', 'more...');\n    } catch(err){\n      console.log(err);\n    }\n    return(\n      <span>{role}</span>\n    )\n  } else {\n    return(\n      <span>{props.roles}</span>\n    )\n  }\n}\n\nconst getType = (title) => {\n  if(title.match(/\\(TV /g)){\n    return 'tv';\n  } else {\n    return 'movie';\n  }\n}\n\nconst formatRole = (role, title) => {\n  if(role.match(/episode/g)){\n    const roleArray = role.split(/\\s\\d+\\sepisode[s]?,\\s/gm);\n    role = `${roleArray[0].replace('...', 'more...')} in ${title} (${roleArray[1]})`;\n  } else {\n    role = `${role} in ${title}`;\n  }\n  return role;\n}\n\nconst MatchingItemsTitles = () => {\n  if(resp.title1.length === 0 && resp.title2.length === 0){\n    return(<p>Unable to find a match. Make sure you've selected the right tab up top.</p>)\n  }\n  let title1ids = resp.title1.actors.map(d => d.id);\n  let title2ids = resp.title2.actors.map(d => d.id);\n  const intersection = title1ids.filter(element => title2ids.includes(element));\n  const mapped = intersection.map(id => {\n    const actor = resp.title1.actors.find(d => d.id === id);\n    const actorB = resp.title2.actors.find(d => d.id === id);\n    let role = [actor.asCharacter, actorB.asCharacter];\n    if(role[0] === role[1]){\n      role = actor.asCharacter;\n      return(\n        <li className=\"actor\" key={id}>\n        <a href={`https://www.imdb.com/name/${actor.id}`}>{actor.name}</a> as {role}</li>\n      )\n    } else {\n      return(\n        <li className=\"actor\" key={id}>\n          <a href={`https://www.imdb.com/name/${actor.id}`}>{actor.name}</a> as\n          <ul className=\"role-sublist\">\n            <li>{formatRole(role[0], resp.title1.title)}</li>\n            <li>{formatRole(role[1], resp.title2.title)}</li>\n          </ul>\n        </li>\n      )\n    }\n  })\n  return(\n    <div>\n    {intersection.length > 0 &&\n      <h2>These actors appeared in {resp.title1.title} and {resp.title2.title}:</h2>\n    }\n    {intersection.length === 0 &&\n      <div>\n        <h2>{resp.title1.title} and {resp.title2.title} do not share any actors.</h2>\n        <p>Something seem off? Make sure you've selected the right tab up top.</p>\n      </div>\n    }\n      <ul>{mapped}</ul>\n    </div>\n  )\n}\n\nconst TitleForm = (props) => {\n  const [found1, setFound1] = useState(false);\n  const [found2, setFound2] = useState(false);\n  const title1 = useRef();\n  const title2 = useRef();\n  const [newItem, setNewItem] = useState(props.new);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setNewItem(false);\n    setFound1(false);\n    setFound2(false);\n    // console.log('submit', title1.current.value, title2.current.value)\n    const title1Search = fetchData('https://imdb-api.com/en/API/SearchTitle', title1.current.value);\n    title1Search.then(data => {\n      const title1ID = data.results[0].id;\n      const title1Values = fetchData('https://imdb-api.com/en/API/FullCast', title1ID).then(data => {\n        if(data){\n          resp.title1 = data;\n        } else {\n          resp.title1 = '';\n        }\n        setFound1(true);\n      })\n    })\n\n    const title2Search = fetchData('https://imdb-api.com/en/API/SearchTitle', title2.current.value);\n    title2Search.then(data => {\n      \n      const title2ID = data.results[0].id;\n      const title2Values = fetchData('https://imdb-api.com/en/API/FullCast', title2ID).then(data => {\n        if(data){\n          resp.title2 = data;\n        } else {\n          resp.title2 = '';\n        }\n        setFound2(true);\n      })\n    })\n  }\n\n  return(\n    <div>\n      <form id=\"findMovies\" onSubmit={handleSubmit}>\n        <div className=\"input-wrapper\" onChange={() => handleChange(title1)}>\n          <input type=\"text\" className=\"acting\" placeholder=\"Title\" ref={title1} />\n          <span className='del' onClick={() => clearInput(title1)}>✕</span>\n        </div> \n        <div className=\"ex\">&</div>\n        <div className=\"input-wrapper\" onChange={() => handleChange(title2)}>\n          <input type=\"text\" className=\"acting\" placeholder=\"Title\" ref={title2} />\n          <span className='del' onClick={() => clearInput(title2)}>✕</span>\n        </div>  \n        <button id=\"submit\" type=\"submit\">compare</button>\n      </form>\n      {!found1 && !found2 && !newItem &&\n        <Loader />\n      }\n      {found1 && found2 &&\n      <div className=\"results\">\n        <MatchingItemsTitles />\n      </div>\n      }\n    </div>\n  )\n}\n\nconst MatchingItems = () => {\n  let a1Roles = resp.actor1.castMovies.filter(d => d.role === \"Actor\" || d.role === \"Actress\");\n  let a2Roles = resp.actor2.castMovies.filter(d => d.role === \"Actor\" || d.role === \"Actress\");\n  let a1ids = a1Roles.map(d => d.id);\n  let a2ids = a2Roles.map(d => d.id);\n  const intersection = a1ids.filter(element => a2ids.includes(element));\n  let a1matches = a1Roles.filter(d => intersection.includes(d.id));\n  let a2matches = a2Roles.filter(d => intersection.includes(d.id));\n\n  const items = intersection.map(id => \n    <li key={id} className={getType(a1matches.find(d => d.id === id).description)}>\n    <Title movie={a1matches.find(d => d.id === id)} />\n      <ul>\n        <li className=\"actor sub\" key={`${resp.actor1.name}-${id}`}>{resp.actor1.name} as <FormatRoles roles={a1matches.find(d => d.id === id).description} /></li>\n        <li className=\"actor sub\" key={`${resp.actor2.name}-${id}`}>{resp.actor2.name} as <FormatRoles roles={a2matches.find(d => d.id === id).description} /></li>\n      </ul>\n    </li>\n  )\n  return(\n    <div>\n    {a1matches.length > 0 &&\n      <h2>{resp.actor1.name} and {resp.actor2.name} have both appeared in:</h2>\n    }\n    {a1matches.length === 0 &&\n      <div>\n        <h2>{resp.actor1.name} and {resp.actor2.name} have never appeared together.</h2>\n        <p>Something seem off? Make sure you've selected the right tab up top.</p>\n      </div>\n    }\n      <ul>\n        {items}\n      </ul>\n    </div>\n  )\n}\n\nconst getSimilarity = (nameValue, returnedName) => {\n  return stringSimilarity.compareTwoStrings(nameValue, returnedName);\n}\n\nconst getMostSimilarId = (actorName, array) => {\n  array.forEach(item => {\n    item.similarity = getSimilarity(actorName.toLowerCase(), item.title.toLowerCase())\n  });\n  array.sort((a, b) => {\n    return b.similarity - a.similarity;\n  });\n  return array[0].id;\n}\n\nconst ActorForm = (props) => {\n  const [found1, setFound1] = useState(false);\n  const [found2, setFound2] = useState(false);\n  const actor1 = useRef();\n  const actor2 = useRef();\n  const [newItem, setNewItem] = useState(props.new);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setNewItem(false);\n    setFound1(false);\n    setFound2(false);\n    const actor1Search = fetchData('https://imdb-api.com/en/API/SearchName', actor1.current.value);\n    actor1Search.then(data => {\n      const actor1ID = getMostSimilarId(actor1.current.value, data.results);\n      const actor1Values = fetchData('https://imdb-api.com/en/API/Name', actor1ID).then(data => {\n        resp.actor1 = data;\n        setFound1(true);\n      })\n    })\n\n    const actor2Search = fetchData('https://imdb-api.com/en/API/SearchName', actor2.current.value);\n    actor2Search.then(data => {\n      const actor2ID = getMostSimilarId(actor2.current.value, data.results);\n      console.log(actor2ID)\n      const actor2Values = fetchData('https://imdb-api.com/en/API/Name', actor2ID).then(data => {\n        resp.actor2 = data;\n        setFound2(true);\n      })\n    })\n  }\n\n  return(\n    <div>\n      <form id=\"findActors\" onSubmit={handleSubmit}>\n        <div className=\"input-wrapper\" onChange={() => handleChange(actor1)}>\n          <input type=\"text\" className=\"acting\" placeholder=\"Actor Name\" ref={actor1} />\n          <span className=\"del\" onClick={() => clearInput(actor1)}>✕</span>\n        </div> \n        <div className=\"ex\">&</div>\n        <div className=\"input-wrapper\" onChange={() => handleChange(actor2)}>\n          <input type=\"text\" className=\"acting\" placeholder=\"Actor Name\" ref={actor2} />\n          <span className=\"del\" onClick={() => clearInput(actor2)}>✕</span>\n        </div>  \n        <button id=\"submit\" type=\"submit\">compare</button>\n      </form>\n      {!found1 && !found2 && !newItem &&\n        <Loader />\n      }\n      {found1 && found2 &&\n      <div className=\"results\">\n        <MatchingItems />\n      </div>\n      }\n    </div>\n  )\n}\n\nconst elements = ['Compare Actors', 'Compare Titles'];\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeElement: 0,\n      allElements: elements\n    };\n  }\n\n  render() {\n    return (\n      <NavItem\n        elements={this.state.allElements}\n        showIndex={this.state.activeElement}\n        toggleIndex={index => this.setState({ activeElement: index})}\n      />\n    );\n  }\n}\n\nconst NavItem = ({ elements, showIndex, toggleIndex, isActive }) => {\n  return(\n    <div>\n      <div className=\"admin-nav\">\n        {elements.map((element, index) => (\n          <div key={index}>\n            <div onClick={() => toggleIndex(index)} className={\n              showIndex === index ? 'selected' : null\n            }>{elements[index]}</div>\n          </div>\n        ))}\n      </div>\n      {showIndex === 0 &&\n        <ActorForm new={true}/>\n      }\n      {showIndex === 1 &&\n        <TitleForm new={true} />\n      }\n    </div>\n  )\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div id=\"title\"><span>✨</span>starcrossed</div>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}