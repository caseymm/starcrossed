{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["apiKey","resp","actor1","actor2","title1","title2","Loader","class","fetchData","base","name","a","urlStr","requestOptions","method","redirect","fetch","then","response","text","result","JSON","parse","catch","error","console","log","data","Title","props","movie","getType","title","href","id","year","FormatRoles","roles","match","split","shift","items","map","role","idx","MatchingItemsTitles","title1ids","actors","d","title2ids","mapped","filter","element","includes","actor","find","actorB","asCharacter","className","TitleForm","useState","found1","setFound1","found2","setFound2","useRef","new","newItem","setNewItem","event","preventDefault","current","value","results","onSubmit","type","ref","MatchingItems","a1Roles","castMovies","a2Roles","a1ids","a2ids","intersection","a1matches","a2matches","description","ActorForm","elements","Nav","state","activeElement","allElements","this","showIndex","toggleIndex","index","setState","Component","NavItem","isActive","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ce44298.chunk.js","sourcesContent":["import React, { useState, useRef, Component } from 'react';\nimport './App.scss';\n\nconst apiKey = 'k_l56508qd';\nlet resp = {\n  actor1: [],\n  actor2: [],\n  title1: [],\n  title2: []\n};\n\nconst Loader = () => {\n  return(\n    <div class=\"loader\">\n      <span>loading</span>\n      <div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n    </div>\n  )\n}\n\nasync function fetchData(base, name){\n  const urlStr = `${base}/${apiKey}/${name}`;\n  const requestOptions = {\n    method: 'GET',\n    redirect: 'follow'\n  };\n   \n  const data = await fetch(urlStr, requestOptions)\n    .then(response => response.text())\n    .then(result => {\n      return JSON.parse(result);\n    })\n    .catch(error => console.log('error', error));\n\n  return data;\n}\n\nconst Title = (props) => {\n  const movie = props.movie;\n  if(getType(movie.title) === 'movie'){\n    return(\n      <h2><a href={`https://www.imdb.com/title/${movie.id}`}>{movie.title} ({movie.year})</a></h2>\n    )\n  } else {\n    return(\n      <h2><a href={`https://www.imdb.com/title/${movie.id}`}>{movie.title}</a></h2>\n    )\n  }\n}\n\nconst FormatRoles = (props) => {\n  if(props.roles.match(/TV Series/g)){\n    let roles = props.roles.split(' - ');\n    roles.shift();\n    const items = roles.map((role, idx) =>\n      <li key={idx}>{role}</li>\n    )\n    return(\n      <ul>\n        {items}\n      </ul>\n    )\n  } else {\n    return(\n      <span>{props.roles}</span>\n    )\n  }\n}\n\nconst getType = (title) => {\n  if(title.match(/TV Series/g)){\n    return 'tv';\n  } else {\n    return 'movie';\n  }\n}\n\nconst MatchingItemsTitles = () => {\n  let title1ids = resp.title1.actors.map(d => d.id);\n  let title2ids = resp.title2.actors.map(d => d.id);\n  const intersection = title1ids.filter(element => title2ids.includes(element));\n  const mapped = intersection.map(id => {\n    const actor = resp.title1.actors.find(d => d.id === id);\n    const actorB = resp.title2.actors.find(d => d.id === id);\n    let role = [actor.asCharacter, actorB.asCharacter];\n    if(role[0] === role[1]){\n      role = actor.asCharacter;\n    } else {\n      role = `${role[0]} and ${role[1]}`\n    }\n    return(\n      <li className=\"actor\" key={id}>\n      <a href={`https://www.imdb.com/name/${actor.id}`}>{actor.name}</a> as {role}</li>\n    )\n  })\n  return(\n    <div>\n      <h2>These actors appeared in {resp.title1.title} and {resp.title2.title}</h2>\n      <ul>{mapped}</ul>\n    </div>\n  )\n}\n\nconst TitleForm = (props) => {\n  const [found1, setFound1] = useState(false);\n  const [found2, setFound2] = useState(false);\n  const title1 = useRef();\n  const title2 = useRef();\n  const [newItem, setNewItem] = useState(props.new);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setNewItem(false);\n    setFound1(false);\n    setFound2(false);\n    // console.log('submit', title1.current.value, title2.current.value)\n    const title1Search = fetchData('https://imdb-api.com/en/API/SearchTitle/', title1.current.value);\n    title1Search.then(data => {\n      const title1ID = data.results[0].id;\n      const title1Values = fetchData('https://imdb-api.com/en/API/FullCast/', title1ID).then(data => {\n        resp.title1 = data;\n        setFound1(true);\n      })\n    })\n\n    const title2Search = fetchData('https://imdb-api.com/en/API/SearchTitle/', title2.current.value);\n    title2Search.then(data => {\n      const title2ID = data.results[0].id;\n      const title2Values = fetchData('https://imdb-api.com/en/API/FullCast/', title2ID).then(data => {\n        resp.title2 = data;\n        setFound2(true);\n      })\n    })\n  }\n\n  return(\n    <div>\n      <form id=\"findMovies\" onSubmit={handleSubmit}>\n        <div className=\"input-wrapper show-ex\">\n          <input type=\"text\" className=\"acting\" ref={title1} />\n          {/* <span class=\"del\">✕</span> */}\n        </div> \n        <div className=\"ex\">&</div>\n        <div className=\"input-wrapper show-ex\">\n          <input type=\"text\" className=\"acting\" ref={title2} />\n          {/* <span class=\"del\">✕</span> */}\n        </div>  \n        <button id=\"submit\" type=\"submit\">🔮 submit 🔮</button>\n      </form>\n      {!found1 && !found2 && !newItem &&\n        <Loader />\n      }\n      {found1 && found2 &&\n      <div className=\"results\">\n        <MatchingItemsTitles />\n      </div>\n      }\n    </div>\n  )\n}\n\nconst MatchingItems = () => {\n  let a1Roles = resp.actor1.castMovies.filter(d => d.role === \"Actor\" || d.role === \"Actress\");\n  let a2Roles = resp.actor2.castMovies.filter(d => d.role === \"Actor\" || d.role === \"Actress\");\n  let a1ids = a1Roles.map(d => d.id);\n  let a2ids = a2Roles.map(d => d.id);\n  const intersection = a1ids.filter(element => a2ids.includes(element));\n  let a1matches = a1Roles.filter(d => intersection.includes(d.id));\n  let a2matches = a2Roles.filter(d => intersection.includes(d.id));\n  const items = intersection.map(id => \n    <li key={id} className={getType(a1matches.find(d => d.id === id).description)}>\n    <Title movie={a1matches.find(d => d.id === id)} />\n      <ul>\n        <li key={`${resp.actor1.name}-${id}`}>{resp.actor1.name} as <FormatRoles roles={a1matches.find(d => d.id === id).description} /></li>\n        <li key={`${resp.actor2.name}-${id}`}>{resp.actor2.name} as <FormatRoles roles={a2matches.find(d => d.id === id).description} /></li>\n      </ul>\n    </li>\n    \n  )\n  return(\n    <div>\n      <p>{resp.actor1.name} and {resp.actor2.name} have both appeared in:</p>\n      <ul>\n        {items}\n      </ul>\n    </div>\n  )\n}\n\nconst ActorForm = (props) => {\n  const [found1, setFound1] = useState(false);\n  const [found2, setFound2] = useState(false);\n  const actor1 = useRef();\n  const actor2 = useRef();\n  const [newItem, setNewItem] = useState(props.new);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setNewItem(false);\n    setFound1(false);\n    setFound2(false);\n    const actor1Search = fetchData('https://imdb-api.com/en/API/SearchName', actor1.current.value);\n    actor1Search.then(data => {\n      const actor1ID = data.results[0].id;\n      const actor1Values = fetchData('https://imdb-api.com/en/API/Name/', actor1ID).then(data => {\n        resp.actor1 = data;\n        setFound1(true);\n      })\n    })\n\n    const actor2Search = fetchData('https://imdb-api.com/en/API/SearchName', actor2.current.value);\n    actor2Search.then(data => {\n      const actor2ID = data.results[0].id;\n      const actor2Values = fetchData('https://imdb-api.com/en/API/Name/', actor2ID).then(data => {\n        resp.actor2 = data;\n        setFound2(true);\n      })\n    })\n  }\n\n  return(\n    <div>\n      <form id=\"findActors\" onSubmit={handleSubmit}>\n        <div className=\"input-wrapper show-ex\">\n          <input type=\"text\" className=\"acting\" ref={actor1} />\n          {/* <span class=\"del\">✕</span> */}\n        </div> \n        <div className=\"ex\">&</div>\n        <div className=\"input-wrapper show-ex\">\n          <input type=\"text\" className=\"acting\" ref={actor2} />\n          {/* <span class=\"del\">✕</span> */}\n        </div>  \n        <button id=\"submit\" type=\"submit\">🔮 submit 🔮</button>\n      </form>\n      {!found1 && !found2 && !newItem &&\n        <Loader />\n      }\n      {found1 && found2 &&\n      <div className=\"results\">\n        <MatchingItems />\n      </div>\n      }\n    </div>\n  )\n}\n\nconst elements = ['Compare Actors', 'Compare Titles'];\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeElement: 0,\n      allElements: elements\n    };\n  }\n\n  render() {\n    return (\n      <NavItem\n        elements={this.state.allElements}\n        showIndex={this.state.activeElement}\n        toggleIndex={index => this.setState({ activeElement: index})}\n      />\n    );\n  }\n}\n\nconst NavItem = ({ elements, showIndex, toggleIndex, isActive }) => {\n  return(\n    <div>\n      <div className=\"admin-nav\">\n        {elements.map((element, index) => (\n          <div key={index}>\n            <div onClick={() => toggleIndex(index)} className={\n              showIndex === index ? 'selected' : null\n            }>{elements[index]}</div>\n          </div>\n        ))}\n      </div>\n      {showIndex === 0 &&\n        <ActorForm new={true}/>\n      }\n      {showIndex === 1 &&\n        <TitleForm new={true} />\n      }\n    </div>\n  )\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div id=\"title\"><span>✨</span>starcrossed</div>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}